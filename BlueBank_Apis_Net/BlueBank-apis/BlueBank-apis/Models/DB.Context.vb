'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class BlueBankEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=BlueBankEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property cuentas() As DbSet(Of cuentas)
    Public Overridable Property movimientos() As DbSet(Of movimientos)
    Public Overridable Property personas() As DbSet(Of personas)
    Public Overridable Property sysdiagrams() As DbSet(Of sysdiagrams)
    Public Overridable Property historico_movimientos() As DbSet(Of historico_movimientos)

    Public Overridable Function consignacion(cuenta As String, valor As Nullable(Of Decimal)) As ObjectResult(Of consignacion_Result)
        Dim cuentaParameter As ObjectParameter = If(cuenta IsNot Nothing, New ObjectParameter("cuenta", cuenta), New ObjectParameter("cuenta", GetType(String)))

        Dim valorParameter As ObjectParameter = If(valor.HasValue, New ObjectParameter("valor", valor), New ObjectParameter("valor", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of consignacion_Result)("consignacion", cuentaParameter, valorParameter)
    End Function

    Public Overridable Function consultaSaldo(cuenta As String, pin As String) As ObjectResult(Of consultaSaldo_Result)
        Dim cuentaParameter As ObjectParameter = If(cuenta IsNot Nothing, New ObjectParameter("cuenta", cuenta), New ObjectParameter("cuenta", GetType(String)))

        Dim pinParameter As ObjectParameter = If(pin IsNot Nothing, New ObjectParameter("pin", pin), New ObjectParameter("pin", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of consultaSaldo_Result)("consultaSaldo", cuentaParameter, pinParameter)
    End Function

    Public Overridable Function datosClientes() As ObjectResult(Of datosClientes_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of datosClientes_Result)("datosClientes")
    End Function

    Public Overridable Function insertarCliente(pNombre As String, sNombre As String, pApellido As String, sApellido As String, documento As String, nroCta As String, clave As String, saldo As Nullable(Of Decimal)) As Integer
        Dim pNombreParameter As ObjectParameter = If(pNombre IsNot Nothing, New ObjectParameter("pNombre", pNombre), New ObjectParameter("pNombre", GetType(String)))

        Dim sNombreParameter As ObjectParameter = If(sNombre IsNot Nothing, New ObjectParameter("sNombre", sNombre), New ObjectParameter("sNombre", GetType(String)))

        Dim pApellidoParameter As ObjectParameter = If(pApellido IsNot Nothing, New ObjectParameter("pApellido", pApellido), New ObjectParameter("pApellido", GetType(String)))

        Dim sApellidoParameter As ObjectParameter = If(sApellido IsNot Nothing, New ObjectParameter("sApellido", sApellido), New ObjectParameter("sApellido", GetType(String)))

        Dim documentoParameter As ObjectParameter = If(documento IsNot Nothing, New ObjectParameter("documento", documento), New ObjectParameter("documento", GetType(String)))

        Dim nroCtaParameter As ObjectParameter = If(nroCta IsNot Nothing, New ObjectParameter("nroCta", nroCta), New ObjectParameter("nroCta", GetType(String)))

        Dim claveParameter As ObjectParameter = If(clave IsNot Nothing, New ObjectParameter("clave", clave), New ObjectParameter("clave", GetType(String)))

        Dim saldoParameter As ObjectParameter = If(saldo.HasValue, New ObjectParameter("saldo", saldo), New ObjectParameter("saldo", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("insertarCliente", pNombreParameter, sNombreParameter, pApellidoParameter, sApellidoParameter, documentoParameter, nroCtaParameter, claveParameter, saldoParameter)
    End Function

    Public Overridable Function retiro(cuenta As String, valor As Nullable(Of Decimal), pin As String) As ObjectResult(Of retiro_Result)
        Dim cuentaParameter As ObjectParameter = If(cuenta IsNot Nothing, New ObjectParameter("cuenta", cuenta), New ObjectParameter("cuenta", GetType(String)))

        Dim valorParameter As ObjectParameter = If(valor.HasValue, New ObjectParameter("valor", valor), New ObjectParameter("valor", GetType(Decimal)))

        Dim pinParameter As ObjectParameter = If(pin IsNot Nothing, New ObjectParameter("pin", pin), New ObjectParameter("pin", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of retiro_Result)("retiro", cuentaParameter, valorParameter, pinParameter)
    End Function

    Public Overridable Function sp_alterdiagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_creatediagram(diagramname As String, owner_id As Nullable(Of Integer), version As Nullable(Of Integer), definition As Byte()) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim versionParameter As ObjectParameter = If(version.HasValue, New ObjectParameter("version", version), New ObjectParameter("version", GetType(Integer)))

        Dim definitionParameter As ObjectParameter = If(definition IsNot Nothing, New ObjectParameter("definition", definition), New ObjectParameter("definition", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter)
    End Function

    Public Overridable Function sp_dropdiagram(diagramname As String, owner_id As Nullable(Of Integer)) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagramdefinition(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagramdefinition_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagramdefinition_Result)("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_helpdiagrams(diagramname As String, owner_id As Nullable(Of Integer)) As ObjectResult(Of sp_helpdiagrams_Result)
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_helpdiagrams_Result)("sp_helpdiagrams", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_renamediagram(diagramname As String, owner_id As Nullable(Of Integer), new_diagramname As String) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Dim new_diagramnameParameter As ObjectParameter = If(new_diagramname IsNot Nothing, New ObjectParameter("new_diagramname", new_diagramname), New ObjectParameter("new_diagramname", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter)
    End Function

    Public Overridable Function sp_upgraddiagrams() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_upgraddiagrams")
    End Function

End Class
